<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Aws | massat log]]></title>
  <link href="http://massat.github.io/blog/categories/aws/atom.xml" rel="self"/>
  <link href="http://massat.github.io/"/>
  <updated>2016-03-21T23:27:19+09:00</updated>
  <id>http://massat.github.io/</id>
  <author>
    <name><![CDATA[Masato Hirai a.k.a. massat]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Amazon AMIにmroongaをインストールする]]></title>
    <link href="http://massat.github.io/blog/2013/08/20/install-mroonga-on-amazon-linux-ami/"/>
    <updated>2013-08-20T18:08:00+09:00</updated>
    <id>http://massat.github.io/blog/2013/08/20/install-mroonga-on-amazon-linux-ami</id>
    <content type="html"><![CDATA[<p>EC2上にmroongaによって全文検索可能なDBを構築した。</p>

<!-- more -->


<h1>環境</h1>

<ul>
<li>amzn-ami-pv-2013.03.1.x86_64-ebs (ami-39b23d38)</li>
<li>mysql5.6.13</li>
<li>groonga3.06</li>
<li>mroonga3.06</li>
</ul>


<p>mysqlはオフィシャルで配布してるrpmパッケージから。
groonga、mroongaはソースからビルドしてインストールした。</p>

<h1>準備</h1>

<h3>checkinstall</h3>

<p>ソースからビルドするものについても、checkinstallでrpm化してインストールする。
64bit版のAMIにcheckinstallをインストールする手順は<a href="http://massat.jp/blog/2013/02/16/install-checkinstall-on-amazon-ami-64bit/">こちら</a>を参照</p>

<h1>MySQLのインストール</h1>

<p>オフィシャルで配布されている Linux Generic な rpm をインストール</p>

<p><code>sh
~ # rpm -ivh http://dev.mysql.com/get/Downloads/MySQL-5.6/MySQL-shared-compat-5.6.13-1.linux_glibc2.5.x86_64.rpm/from/http://cdn.mysql.com/
~ # rpm -ivh http://dev.mysql.com/get/Downloads/MySQL-5.6/MySQL-server-5.6.13-1.linux_glibc2.5.x86_64.rpm/from/http://cdn.mysql.com/
~ # rpm -ivh http://dev.mysql.com/get/Downloads/MySQL-5.6/MySQL-devel-5.6.13-1.linux_glibc2.5.x86_64.rpm/from/http://cdn.mysql.com/
~ # rpm -ivh http://dev.mysql.com/get/Downloads/MySQL-5.6/MySQL-client-5.6.13-1.linux_glibc2.5.x86_64.rpm/from/http://cdn.mysql.com/
</code></p>

<p>デフォルトの<code>my.cnf</code>の場所が<code>/usr/my.cnf</code>になったみたい。
あと、mysql5.6からはデフォルトの<code>sql_mode</code>が変わって<a href="https://www.google.co.jp/search?q=mysql+5.6+sql_mode">よくエラーになるらしいので注意</a></p>

<h1>MeCabのインストール</h1>

<p><code>sh
~ # yum install mecab mecab-devel mecab-ipadic
</code></p>

<h1>groongaのインストール</h1>

<h3>ビルドに必要なライブラリ</h3>

<p>要らないものもあるかも</p>

<p><code>sh
~ # yum install gcc-c++ make automake libtool
</code></p>

<h3>インストール</h3>

<p>だいたいは<a href="http://groonga.org/ja/docs/install/centos.html#build-from-source">ここ</a>の手順に従った。</p>

<p><code>sh
~ # cd /usr/local/src/
src # wget http://packages.groonga.org/source/groonga/groonga-3.0.6.tar.gz
src # tar xzf groonga-3.0.6.tar.gz
src # cd groonga-3.0.6
groonga-3.0.6 # ./configure
groonga-3.0.6 # make -j$(grep '^processor' /proc/cpuinfo | wc -l)
</code></p>

<p>んで、<code>make install</code> ではなくて <code>checkinstall</code> でrpmにする。</p>

<p><code>sh
groonga-3.0.6 # checkinstall
</code></p>

<p>だけどコケる。
checkinstallがmake中に、どうやら必要なディレクトリが作れていない。
試行錯誤の末、以下のディレクトリを作ればビルドできる（と思う）</p>

<p><code>sh
groonga-3.0.6 # mkdir -p /usr/local/include/groonga/groonga
groonga-3.0.6 # mkdir -p /usr/local/lib/groonga/plugins/tokenizers
groonga-3.0.6 # mkdir -p /usr/local/lib/groonga/plugins/suggest
groonga-3.0.6 # mkdir -p /usr/local/lib/groonga/plugins/table
groonga-3.0.6 # mkdir -p /usr/local/lib/groonga/plugins/query_expanders
groonga-3.0.6 # mkdir -p /usr/local/etc/groonga
groonga-3.0.6 # mkdir -p /usr/local/var/run/groonga
groonga-3.0.6 # mkdir -p /usr/local/var/log/groonga/httpd
groonga-3.0.6 # mkdir -p /usr/local/share/groonga/examples/dictionary/edict
groonga-3.0.6 # mkdir -p /usr/local/share/groonga/examples/dictionary/html/css/smoothness/images
groonga-3.0.6 # mkdir -p /usr/local/share/groonga/images/logo
groonga-3.0.6 # mkdir -p /usr/local/share/doc/groonga/en/html/reference/command
groonga-3.0.6 # mkdir -p /usr/local/share/doc/groonga/en/html/_sources/contribution/development
groonga-3.0.6 # mkdir -p /usr/local/share/doc/groonga/en/html/_sources/reference/api
groonga-3.0.6 # mkdir -p /usr/local/share/doc/groonga/en/html/server/http
groonga-3.0.6 # mkdir -p /usr/local/share/doc/groonga/en/html/_sources/server/http
</code></p>

<p>その上で、checkinstallでrpmを作ってインストール</p>

<p><code>sh
groonga-3.0.6 # checkinstall
groonga-3.0.6 # rpm -ivh /root/rpmbuild/RPMS/x86_64/groonga-3.0.6-1.x86_64.rpm
</code></p>

<h3>mroongaのインストール</h3>

<p>手順はほぼ<a href="http://mroonga.org/ja/docs/install.html#install-from-the-source-code">こちら</a>の通り</p>

<p>まずはMySQLのソースコードがmroongaのビルドに必要なので落としてくる。</p>

<p><code>sh
src # wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.13.tar.gz/from/http://cdn.mysql.com/
src # tar xzf mysql-5.6.13.tar.gz
</code></p>

<p>mroongaのソースコードを取得後、ビルドしてインストール。</p>

<p><code>sh
src # wget http://packages.groonga.org/source/mroonga/mroonga-3.06.tar.gz
src # tar xzf mroonga-3.06.tar.gz
src # cd mroonga-3.06
mroonga-3.06 # ./configure PKG_CONFIG_PATH=/usr/local/lib/pkgconfig  --with-mysql-source=/usr/local/src/mysql-5.6.13 --with-mysql-config=/usr/bin/mysql_config
mroonga-3.06 # make
mroonga-3.06 # checkinstall
</code></p>

<p>んが、groongaの時と同様に、ディレクトリが作れずこける。
ので、手対応。</p>

<p><code>sh
mroonga-3.06 # mkdir -p '/usr/local/share/doc/mroonga/en/html/_sources/dev
mroonga-3.06 # mkdir -p '/usr/local/share/doc/mroonga/source/reference'
mroonga-3.06 # checkinstall
mroonga-3.06 # rpm -ivh /root/rpmbuild/RPMS/x86_64/mroonga-3.06-1.x86_64.rpm
</code></p>

<p>MySQL起動後、mroongaをプラグインとしてインストールする。</p>

<p>```sql
mysql> INSTALL PLUGIN mroonga SONAME &lsquo;ha_mroonga.so&rsquo;;
Query OK, 0 rows affected (0.30 sec)</p>

<p>mysql> CREATE FUNCTION last_insert_grn_id RETURNS INTEGER SONAME &lsquo;ha_mroonga.so&rsquo;;
Query OK, 0 rows affected (0.00 sec)</p>

<p>mysql> CREATE FUNCTION mroonga_snippet RETURNS STRING SONAME &lsquo;ha_mroonga.so&rsquo;;
Query OK, 0 rows affected (0.00 sec)</p>

<p>mysql> CREATE FUNCTION mroonga_command RETURNS STRING SONAME &lsquo;ha_mroonga.so&rsquo;;
Query OK, 0 rows affected (0.00 sec)</p>

<p>mysql> show engines;
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES        |
| MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         |
| CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO         |
| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         |
| MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         |
| FEDERATED          | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |
| mroonga            | YES     | CJK-ready fulltext search, column store                        | NO           | NO   | NO         |
| MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO   | NO         |
| PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO         |
| ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO         |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
10 rows in set (0.02 sec)
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[64bit版Amazon AMIにcheckinstallをインストールする]]></title>
    <link href="http://massat.github.io/blog/2013/02/16/install-checkinstall-on-amazon-ami-64bit/"/>
    <updated>2013-02-16T22:18:00+09:00</updated>
    <id>http://massat.github.io/blog/2013/02/16/install-checkinstall-on-amazon-ami-64bit</id>
    <content type="html"><![CDATA[<p>64bit環境でのcheckinstallのインストール手順をすぐ忘れるのでメモ</p>

<!-- more -->


<h1>準備</h1>

<p>```sh</p>

<h1>yum -y install git make gettext gcc rpm-build</h1>

<h1>cd /usr/local/src/</h1>

<h1>git clone <a href="http://checkinstall.izto.org/checkinstall.git">http://checkinstall.izto.org/checkinstall.git</a></h1>

<h1>cd checkinstall/</h1>

<p>```</p>

<h1>64bit向けにpatchをあてる</h1>

<p><a href="https://gist.github.com/massat/4967004">これらのpatch</a>をあてる</p>

<p>```sh</p>

<h1>curl <a href="https://gist.github.com/massat/4967004/raw/0a485150b270cb9e9397d1040963a627a86436e2/Makefile.patch">https://gist.github.com/massat/4967004/raw/0a485150b270cb9e9397d1040963a627a86436e2/Makefile.patch</a> | patch -u Makefile</h1>

<h1>curl <a href="https://gist.github.com/massat/4967004/raw/2e447f2a7519337ca8d15a80e0bad31871b39eb7/checkinstallrc-dist.patch">https://gist.github.com/massat/4967004/raw/2e447f2a7519337ca8d15a80e0bad31871b39eb7/checkinstallrc-dist.patch</a> | patch -u checkinstallrc-dist</h1>

<h1>curl <a href="https://gist.github.com/massat/4967004/raw/bb87f7ee31d0758e5cec9c8d430215739428ecc1/installwatch+Makefile.patch">https://gist.github.com/massat/4967004/raw/bb87f7ee31d0758e5cec9c8d430215739428ecc1/installwatch+Makefile.patch</a> | patch -u installwatch/Makefile</h1>

<p>```</p>

<h1>checkinstallをRPM化</h1>

<p>```sh</p>

<h1>mkdir -p ~/rpmbuild/SOURCES</h1>

<h1>make</h1>

<h1>make install</h1>

<h1>checkinstall</h1>

<p>```</p>

<p>いくつか質問される。パッケージを選ぶ質問には"R"(rpm)を入力。その他はReturnのみでOK。</p>

<p>```sh</p>

<hr />

<p> Done. The new package has been saved to</p>

<p> /root/rpmbuild/RPMS/x86_64/checkinstall-20130216-1.x86_64.rpm
 You can install it in your system anytime using:</p>

<pre><code>   rpm -i checkinstall-20130216-1.x86_64.rpm
</code></pre>

<hr />

<h1>rpm -ivh /root/rpmbuild/RPMS/x86_64/checkinstall-20130216-1.x86_64.rpm</h1>

<p>```</p>

<p>インストールを確認</p>

<p>```sh</p>

<h1>rpm -qi checkinstall</h1>

<p>Name        : checkinstall                 Relocations: (not relocatable)
Version     : 20130216                          Vendor: (none)
Release     : 1                             Build Date: Sat 16 Feb 2013 02:13:02 PM UTC
Install Date: Sat 16 Feb 2013 02:18:34 PM UTC      Build Host: ip-10-152-103-196.ap-northeast-1.compute.internal
Group       : Applications/System           Source RPM: checkinstall-20130216-1.src.rpm
Size        : 453850                           License: GPL
Signature   : (none)
Packager    : checkinstall-1.6.3
Summary     : CheckInstall installations tracker, version 1.6.2
Description :
CheckInstall installations tracker, version 1.6.2</p>

<p>CheckInstall  keeps  track of all the files created  or
modified  by your installation  script  (&ldquo;make install&rdquo;
&ldquo;make install_modules&rdquo;,  &ldquo;setup&rdquo;,   etc),   builds    a
standard   binary   package and  installs  it  in  your
system giving you the ability to uninstall it with your
distribution&rsquo;s  standard package management  utilities.
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Amazon Linux AMIにQ4Mをインストール]]></title>
    <link href="http://massat.github.io/blog/2012/04/08/install-q4m-on-amazon-linux-ami/"/>
    <updated>2012-04-08T17:57:00+09:00</updated>
    <id>http://massat.github.io/blog/2012/04/08/install-q4m-on-amazon-linux-ami</id>
    <content type="html"><![CDATA[<p>今運用しているサービスでそろそろジョブキューが必要となりそう。
インストール手順を確認がてら、EC2にQ4Mをインストールしてみる。
Q4Mはソースからではなく、ビルド済のパッケージを使う。</p>

<!-- more -->


<p>EC2でmicroインスタンスたちあげて、Q4Mをインストール。
AMIにはAmazon Linux AMIを使用した。
このエントリ時点のAMIのバージョンは<code>amzn-ami-pv-2012.03.1.x86_64-ebs (ami-e47acbe5)</code>。</p>

<h2>MySQLのインストール</h2>

<p>Officialのrpmをつかってインストール。
現在配布されている最新のビルド済Q4MはMySQL5.1.55向けのもの。
MySQLサイトからRPMをダウンロードしてインストール。</p>

<p>``` sh</p>

<h1>wget <a href="http://downloads.mysql.com/archives/mysql-5.1/MySQL-server-5.1.55-1.glibc23.x86_64.rpm">http://downloads.mysql.com/archives/mysql-5.1/MySQL-server-5.1.55-1.glibc23.x86_64.rpm</a></h1>

<h1>wget <a href="http://downloads.mysql.com/archives/mysql-5.1/MySQL-client-5.1.55-1.glibc23.x86_64.rpm">http://downloads.mysql.com/archives/mysql-5.1/MySQL-client-5.1.55-1.glibc23.x86_64.rpm</a></h1>

<h1>rpm -ivh MySQL-server-5.1.55-1.glibc23.x86_64.rpm</h1>

<h1>rpm -ivh MySQL-client-5.1.55-1.glibc23.x86_64.rpm</h1>

<p>```</p>

<h2>Q4Mのインストール</h2>

<p>MySQLが<code>--with-fast-mutexes</code>オプションを使ってコンパイルされているかどうかで使用するQ4Mのパッケージが変わる。</p>

<p>``` sh</p>

<h1>cat <code>which mysqlbug</code> | grep CONFIGURE_LINE</h1>

<p>CONFIGURE_LINE=&ldquo;./configure  &lsquo;&mdash;with-mysqld-ldflags=-static&rsquo; &lsquo;&mdash;with-client-ldflags=-static&rsquo; &lsquo;&mdash;enable-assembler&rsquo; &lsquo;&mdash;enable-local-infile&rsquo; &lsquo;&mdash;with-fast-mutexes&rsquo; &lsquo;&mdash;with-mysqld-user=mysql&rsquo; &lsquo;&mdash;with-unix-socket-path=/var/lib/mysql/mysql.sock&rsquo; &lsquo;&mdash;with-pic&rsquo; &lsquo;&mdash;prefix=/&rsquo; &lsquo;&mdash;with-extra-charsets=complex&rsquo; &lsquo;&mdash;with-ssl&rsquo; &lsquo;&mdash;exec-prefix=/usr&rsquo; &lsquo;&mdash;libexecdir=/usr/sbin&rsquo; &lsquo;&mdash;libdir=/usr/lib64&rsquo; &lsquo;&mdash;sysconfdir=/etc&rsquo; &lsquo;&mdash;datadir=/usr/share&rsquo; &lsquo;&mdash;localstatedir=/var/lib/mysql&rsquo; &lsquo;&mdash;infodir=/usr/share/info&rsquo; &lsquo;&mdash;includedir=/usr/include&rsquo; &lsquo;&mdash;mandir=/usr/share/man&rsquo; &lsquo;&mdash;enable-thread-safe-client&rsquo; &lsquo;&mdash;with-comment=MySQL Community Server (GPL)&rsquo; &lsquo;&mdash;with-readline&rsquo; &lsquo;&mdash;with-zlib-dir=bundled&rsquo; &lsquo;&mdash;without-plugin-ndbcluster&rsquo; &lsquo;&mdash;with-plugin-innobase&rsquo; &lsquo;&mdash;without-plugin-innodb_plugin&rsquo; &lsquo;&mdash;with-plugin-partition&rsquo; &lsquo;&mdash;with-plugin-csv&rsquo; &lsquo;&mdash;with-plugin-archive&rsquo; &lsquo;&mdash;with-plugin-blackhole&rsquo; &lsquo;&mdash;with-plugin-federated&rsquo; &lsquo;&mdash;without-plugin-daemon_example&rsquo; &lsquo;&mdash;without-plugin-ftexample&rsquo; &lsquo;&mdash;with-embedded-server&rsquo; &lsquo;&mdash;with-big-tables&rsquo; &lsquo;&mdash;enable-shared&rsquo; &lsquo;CC=gcc&rsquo; &lsquo;CFLAGS=-O2 -g -pipe&rsquo; &lsquo;LDFLAGS=&rsquo; &lsquo;CXX=gcc&rsquo; &lsquo;CXXFLAGS=-O2 -g -pipe -felide-constructors -fno-exceptions -fno-rtti &rsquo;&rdquo;
<code>test -n "$CONFIGURE_LINE"  &amp;&amp; echo "Configure command: $CONFIGURE_LINE"</code>
```</p>

<p>コンパイルオプションに<code>--with-fast-mutexes</code>があるので、それ用のパッケージをDLしてインストールする。</p>

<p>``` sh</p>

<h1>wget <a href="http://q4m.kazuhooku.com/dist/mysql-5.1.55-linux-x86_64-glibc23-with-fast-mutexes-q4m-0.9.5.tar.gz">http://q4m.kazuhooku.com/dist/mysql-5.1.55-linux-x86_64-glibc23-with-fast-mutexes-q4m-0.9.5.tar.gz</a></h1>

<h1>tar xzf mysql-5.1.55-linux-x86_64-glibc23-with-fast-mutexes-q4m-0.9.5.tar.gz</h1>

<h1>cd q4m-0.9.5-linux-unknown/</h1>

<h1>cp support-files/q4m-forward /usr/bin/</h1>

<h1>cp libqueue_engine.so /usr/lib64/mysql/plugin/</h1>

<h1>mysql &lt; support-files/install.sql</h1>

<p>```</p>

<h2>動作確認</h2>

<p>``` sh</p>

<h1>mysql</h1>

<p>Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 3
Server version: 5.1.55 MySQL Community Server (GPL)</p>

<p>Copyright &copy; 2000, 2010, Oracle and/or its affiliates. All rights reserved.
This software comes with ABSOLUTELY NO WARRANTY. This is free software,
and you are welcome to modify and redistribute it under the GPL v2 license</p>

<p>Type &lsquo;help;&rsquo; or &lsquo;\h&rsquo; for help. Type &lsquo;\c&rsquo; to clear the current input statement.</p>

<p>mysql> show engines;
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| Engine     | Support | Comment                                                        | Transactions | XA   | Savepoints |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| InnoDB     | YES     | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES        |
| MRG_MYISAM | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         |
| QUEUE      | YES     | Queue storage engine for MySQL                                 | NO           | NO   | NO         |
| CSV        | YES     | CSV storage engine                                             | NO           | NO   | NO         |
| MEMORY     | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         |
| FEDERATED  | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |
| ARCHIVE    | YES     | Archive storage engine                                         | NO           | NO   | NO         |
| BLACKHOLE  | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         |
| MyISAM     | DEFAULT | Default engine as of MySQL 3.23 with great performance         | NO           | NO   | NO         |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
9 rows in set (0.00 sec)
```</p>

<p><code>QUEUE</code>エンジンが確認できた。</p>

<h2>まとめ</h2>

<p>とりあえずインストールだけ。
worker書いたりはまた後日。Rubyで書くつもり。</p>
]]></content>
  </entry>
  
</feed>
