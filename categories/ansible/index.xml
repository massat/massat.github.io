<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ansible on massat log</title>
    <link>https://massat.github.io/categories/ansible/index.xml</link>
    <description>Recent content in Ansible on massat log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <atom:link href="https://massat.github.io/categories/ansible/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>bootstrap-my-mac</title>
      <link>https://massat.github.io/blog/2014/07/08/bootstrap-my-mac/</link>
      <pubDate>Tue, 08 Jul 2014 22:02:36 +0000</pubDate>
      
      <guid>https://massat.github.io/blog/2014/07/08/bootstrap-my-mac/</guid>
      <description>&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p&gt;おやおや？ [pic] — &lt;a href=&#34;https://t.co/N0BbShnkAH&#34;&gt;https://t.co/N0BbShnkAH&lt;/a&gt;&lt;/p&gt;&amp;mdash; 平井雅人 (@massat) &lt;a href=&#34;https://twitter.com/massat/statuses/470715846495444992&#34;&gt;2014, 5月 25&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;というわけで Macbook Pro を新調して、新しい環境構築をすることとなった。&lt;/p&gt;

&lt;p&gt;旧MBPはたしかMac2代目?で、2010年から使っていて、はじめは &lt;code&gt;port&lt;/code&gt; とか使ってたように思うし、&lt;code&gt;MAMP&lt;/code&gt; とかもつかってたかもしれない。
そのうちに &lt;code&gt;Homebrew&lt;/code&gt; が現れて、へー美味しいの？なんて使い始めて、へー &lt;code&gt;rbenv&lt;/code&gt; ? なんていってrubyも突っ込んで。
そのうちに、あれPATHが通ってないとかgemが動かないとか。あーなんか整理できていないなーなんて思いながらも、
基本1つのプロダクトに集中して携わっていてworkしてるのでよしとしていた感があった。&lt;/p&gt;

&lt;p&gt;一方で、 &lt;code&gt;chef&lt;/code&gt; だったり &lt;code&gt;puppet&lt;/code&gt; だったり &lt;code&gt;serverspec&lt;/code&gt; だったり。
環境をコードで記述するっていうことが普通に行われるようになった今。
新しい愛機をセットアップするにあたっては、この環境をよりcleanでポータブルなものにしようと思ってしこしこやっているのでした。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/massat/bootstrap&#34;&gt;massat/bootstrap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最初は &lt;code&gt;Brewfile&lt;/code&gt; を書いてたんだけど、そのうち &lt;code&gt;Homebrew&lt;/code&gt; で賄いきれなくなって、
&lt;a href=&#34;http://www.ansible.com/home&#34;&gt;ansible&lt;/a&gt; でまとめてる。&lt;/p&gt;

&lt;p&gt;macを新しく買ってきて、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で command line tools を入れて、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ruby -e &amp;quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で Homebrewを入れて&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew install ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;ansible&lt;/code&gt; をインストール。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git clone git@github.com:massat/bootstrap.git
$ cd bootstrap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;play-book のレポジトリを clone して、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ansible-playbook -i inventory -K playbook.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で環境ができあがる、つもり。
なんだけど、もはや自分の環境では何度も実行してるので、cleanな環境に適用できるのか自信なし。&lt;/p&gt;

&lt;p&gt;2014/7/8 現在、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Homebrew&lt;/li&gt;
&lt;li&gt;mosh&lt;/li&gt;
&lt;li&gt;the_silver_searcher&lt;/li&gt;
&lt;li&gt;oh-my-zsh&lt;/li&gt;
&lt;li&gt;autojump&lt;/li&gt;
&lt;li&gt;peco&lt;/li&gt;
&lt;li&gt;ghq&lt;/li&gt;
&lt;li&gt;gh-open&lt;/li&gt;
&lt;li&gt;rbenv&lt;/li&gt;
&lt;li&gt;php&lt;/li&gt;
&lt;li&gt;go&lt;/li&gt;
&lt;li&gt;vagrant&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などなど。
捗るツールが入る、つもり。
自分の環境では動いてる。&lt;/p&gt;

&lt;p&gt;p-r 歓迎。&lt;/p&gt;

&lt;p&gt;(7/9追記)&lt;/p&gt;

&lt;p&gt;homebrew-cask で以下のも入れてる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;alfred&lt;/li&gt;
&lt;li&gt;coteditor&lt;/li&gt;
&lt;li&gt;evernote&lt;/li&gt;
&lt;li&gt;google-chrome&lt;/li&gt;
&lt;li&gt;google-japanese-ime&lt;/li&gt;
&lt;li&gt;hipchat&lt;/li&gt;
&lt;li&gt;hoster&lt;/li&gt;
&lt;li&gt;iterm2&lt;/li&gt;
&lt;li&gt;libreoffice&lt;/li&gt;
&lt;li&gt;mysqlworkbench&lt;/li&gt;
&lt;li&gt;skype&lt;/li&gt;
&lt;li&gt;slack&lt;/li&gt;
&lt;li&gt;sophos-anti-virus-home-edition&lt;/li&gt;
&lt;li&gt;sublime-text&lt;/li&gt;
&lt;li&gt;virtualbox&lt;/li&gt;
&lt;li&gt;yorufukurou&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ansible-motd-dq2</title>
      <link>https://massat.github.io/blog/2014/04/01/ansible-motd-dq2/</link>
      <pubDate>Tue, 01 Apr 2014 21:53:02 +0000</pubDate>
      
      <guid>https://massat.github.io/blog/2014/04/01/ansible-motd-dq2/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;em&gt;2014/4/2 ansible-galaxyの推奨する仕様に修正 commit: &lt;a href=&#34;https://github.com/massat/ansible-motd-dq2/commit/c8058f36a1c0ab61f412e684f42cc0082760627b&#34;&gt;c8058f3&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ansibleでsshログインしたときにドラクエのキャラクターが表示されるplaybookを書いた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://galaxy.ansible.com/list#/roles/685&#34;&gt;ansible-motd-dq2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ネタ元は&lt;a href=&#34;http://qiita.com/makocchi/items/5549c41526d6a6cabab1&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;get-started&#34;&gt;Get started&lt;/h2&gt;

&lt;p&gt;ansible-galaxy からは、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ansible-galaxy install massat.ansible-motd-dq2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でインストールでき、&lt;code&gt;massat.ansible-motd-dq2&lt;/code&gt;のrole名で以下の感じで利用可能。&lt;/p&gt;

&lt;p&gt;```yml example.yml
- hosts: example
  roles:
  - { role: massat.ansible-motd-dq2, motd_dq2_figure: slime-beth }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
```sh
$ ansible-playbook example.yml -i path/to/your-inventry
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また、githubからcloneするとVagrantfileが同梱してるので、&lt;code&gt;vagrant&lt;/code&gt;が入っていれば手元ですぐ確認ができる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ vagrant up
$ ansible-playbook example.yml -i example_inventry
$ ssh vagrant@127.0.0.1 -p 2222 -i ~/.vagrant.d/insecure_private_key
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://massat.github.io/images/posts/1__vagrant_vagrant-ubuntu-raring-64_____ssh_.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;表示できるキャラクター&#34;&gt;表示できるキャラクター&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;slime&lt;/li&gt;
&lt;li&gt;slime-beth&lt;/li&gt;
&lt;li&gt;metal-slime&lt;/li&gt;
&lt;li&gt;bubble-slime&lt;/li&gt;
&lt;li&gt;hagure-metal&lt;/li&gt;
&lt;li&gt;slime-allstar&lt;/li&gt;
&lt;li&gt;dq2-lorasia&lt;/li&gt;
&lt;li&gt;dq2-samaltria&lt;/li&gt;
&lt;li&gt;dq2-moonbrooke&lt;/li&gt;
&lt;li&gt;dq2-allstar&lt;/li&gt;
&lt;li&gt;dq2-allstar_half&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;キャラクターはplaybookの外部変数&lt;code&gt;motd_dq2_figure&lt;/code&gt;で指定できる。デフォルトは&lt;code&gt;slime&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;ローレシアの王子は&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ansible-playbook example.yml -i example_inventry --extra-vars &amp;quot;motd_dq2_figure=dq2-lorasia&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で表示できる。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://massat.github.io/images/posts/2__vagrant_vagrant-ubuntu-raring-64_____ssh_.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ansibleの手習いをvagrantにてする</title>
      <link>https://massat.github.io/blog/2014/03/27/vagrant-ansible/</link>
      <pubDate>Thu, 27 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://massat.github.io/blog/2014/03/27/vagrant-ansible/</guid>
      <description>&lt;p&gt;ansibleがよさげなので&lt;a href=&#34;http://docs.ansible.com/intro_getting_started.html&#34;&gt;これ&lt;/a&gt;みながらvagrantとつなげてみる。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;準備&#34;&gt;準備&lt;/h2&gt;

&lt;h3 id=&#34;vagrant&#34;&gt;vagrant&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.vagrantup.com/v2/getting-started/index.html&#34;&gt;このへん&lt;/a&gt;みて。
&lt;code&gt;homebrew-cask&lt;/code&gt;と&lt;code&gt;brewfile&lt;/code&gt;でいけるらしい。未来。&lt;/p&gt;

&lt;h3 id=&#34;ansible&#34;&gt;ansible&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;➜  ~  brew install ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で済ませた。&lt;/p&gt;

&lt;h2 id=&#34;provisioningするホストの用意&#34;&gt;provisioningするホストの用意&lt;/h2&gt;

&lt;p&gt;vagrantで用意する。
&lt;code&gt;ubuntu 13.04&lt;/code&gt;にした。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;➜  ~  vagrant box add ubuntu13.04 http://cloud-images.ubuntu.com/vagrant/raring/current/raring-server-cloudimg-amd64-vagrant-disk1.box
➜  ~  mkdir -p ~/Workspace/ansible/
➜  ~  cd ~/Workspace/ansible
➜  ansible  vagrant init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vagrantfile の&lt;code&gt;config.vm.box&lt;/code&gt;でさっきのboxを指定して&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;  # ...

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = &amp;quot;ubuntu13.04&amp;quot;

  # ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;手っ取り早く起動。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;➜  ansible  vagrant up
Bringing machine &#39;default&#39; up with &#39;virtualbox&#39; provider...
==&amp;gt; default: Importing base box &#39;ubuntu13.04&#39;...
==&amp;gt; default: Matching MAC address for NAT networking...
==&amp;gt; default: Setting the name of the VM: ansible_default_1395929701950_33564
==&amp;gt; default: Clearing any previously set forwarded ports...
==&amp;gt; default: Clearing any previously set network interfaces...
==&amp;gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==&amp;gt; default: Forwarding ports...
    default: 22 =&amp;gt; 2222 (adapter 1)
==&amp;gt; default: Booting VM...
==&amp;gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Error: Connection timeout. Retrying...
==&amp;gt; default: Machine booted and ready!
==&amp;gt; default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default:
    default: Guest Additions Version: 4.2.10
    default: VirtualBox Version: 4.3
==&amp;gt; default: Mounting shared folders...
    default: /vagrant =&amp;gt; /Users/massat/Workspace/ansible
➜  ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ansibleの設定&#34;&gt;ansibleの設定&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.ansible.com/intro_getting_started.html&#34;&gt;これ&lt;/a&gt;にしたがって進む。&lt;/p&gt;

&lt;h3 id=&#34;inventry&#34;&gt;inventry&lt;/h3&gt;

&lt;p&gt;ansibleが対象にするホストは&lt;code&gt;inventry&lt;/code&gt;として指定するらしい。
詳しい書式は&lt;a href=&#34;http://docs.ansible.com/intro_inventory.html&#34;&gt;このへん&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;上記で起動したホストを指定する。
さっきの起動ログに&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;default: SSH address: 127.0.0.1:2222
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とあるので&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;➜  ansible  echo &#39;127.0.0.1:2222&#39; &amp;gt; hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;した。&lt;/p&gt;

&lt;h3 id=&#34;ホストへssh接続&#34;&gt;ホストへssh接続&lt;/h3&gt;

&lt;p&gt;このホストは&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;➜  ansible  ssh vagrant@127.0.0.1 -p 2222 -i ~/.vagrant.d/insecure_private_key
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でssh接続できるので、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;➜  ansible  ansible all -m ping -i hosts -u vagrant --private-key=~/.vagrant.d/insecure_private_key
127.0.0.1 | success &amp;gt;&amp;gt; {
    &amp;quot;changed&amp;quot;: false,
    &amp;quot;ping&amp;quot;: &amp;quot;pong&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で接続できる。&lt;/p&gt;

&lt;h3 id=&#34;commandの実行&#34;&gt;commandの実行&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;-m&lt;/code&gt;オプションは、ansibleのmoduleを指定するオプションで、デフォルトは&lt;code&gt;command&lt;/code&gt;となる。
&lt;code&gt;command&lt;/code&gt;で、ssh越しにコマンドを送りつけることができる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;➜  ansible  ansible all -a &#39;/bin/cat /etc/hostname&#39;  -i hosts -u vagrant --private-key=~/.vagrant.d/insecure_private_key --sudo
127.0.0.1 | success | rc=0 &amp;gt;&amp;gt;
vagrant-ubuntu-raring-64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なるほどねー。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>