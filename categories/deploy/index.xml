<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deploy on massat log</title>
    <link>https://massat.github.io/categories/deploy/index.xml</link>
    <description>Recent content in Deploy on massat log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <atom:link href="https://massat.github.io/categories/deploy/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>StarmanとArcherで優雅にデプロイする話</title>
      <link>https://massat.github.io/blog/2012/03/31/graceful-deployment-with-starman-and-archer/</link>
      <pubDate>Sat, 31 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://massat.github.io/blog/2012/03/31/graceful-deployment-with-starman-and-archer/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/miyagawa/Starman&#34;&gt;Starman&lt;/a&gt;に対してリモートから&lt;a href=&#34;https://github.com/tokuhirom/Archer&#34;&gt;Archer&lt;/a&gt;でソースをデプロイしつつHUPを投げつけるという話。&lt;/p&gt;

&lt;p&gt;構成は例えば以下のような感じで、&lt;code&gt;admin&lt;/code&gt;から&lt;code&gt;app*&lt;/code&gt;にばらまく感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[admin] --+--&amp;gt; [app01]
          |
          +--&amp;gt; [app02]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;starmanの再起動&#34;&gt;Starmanの再起動&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/miyagawa/Starman/blob/master/README&#34;&gt;StarmanのREADME&lt;/a&gt;によれば、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Supports &amp;ldquo;HUP&amp;rdquo; for graceful worker restarts, and &amp;ldquo;TTIN&amp;rdquo;/&amp;ldquo;TTOU&amp;rdquo; to
dynamically increase or decrease the number of worker processes, as
well as &amp;ldquo;QUIT&amp;rdquo; to gracefully shutdown the worker processes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;と書いてあって、HUPでGraceful Restartしてくれるとある。&lt;/p&gt;

&lt;p&gt;ためしに&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% plackup -r -s Starman --pid=/tmp/starman.pid

2012/03/29-19:53:12 Starman::Server (type Net::Server::PreFork) starting! pid(23802)

(中略)

Binding to TCP port 5000 on host *
Setting gid to &amp;quot;20 20 20 204 100 98 81 80 79 61 12 401 402&amp;quot;
Starman: Accepting connections at http://*:5000/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;としてStarmanを起動して別のシェルプロセスから&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;% sudo kill -HUP `cat /tmp/starman.pid`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とすると、Starman側に&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Sending children hup signal during HUP on prefork server
2012/03/29-19:54:12 Server closing!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と表示される。&lt;/p&gt;

&lt;p&gt;ちなみにStarmanはRubyの&lt;a href=&#34;http://unicorn.bogomips.org/&#34;&gt;Unicorn&lt;/a&gt;ライクなものなのかなーと思っていたけど、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The name Starman is taken from the song (&lt;em&gt;Star na Otoko&lt;/em&gt;) by the
Japanese rock band Unicorn (yes, Unicorn!). It&amp;rsquo;s also known as a song by
David Bowie, a power-up from Super Mario Brothers and a character from
Earthbound, all of which I love.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とあって、 &amp;ldquo;Unicorn -&amp;gt; ユニコーン -&amp;gt; スターな男 -&amp;gt; Starman&amp;rdquo; ってことかしら。&lt;/p&gt;

&lt;h2 id=&#34;archerでのデプロイ&#34;&gt;Archerでのデプロイ&lt;/h2&gt;

&lt;p&gt;Archerでリモートホストから rsync でソースを投げた後、Starman にHUPを投げたい。
正直Archerはまだあまり使いかたがわかってない。&lt;/p&gt;

&lt;p&gt;設定ファイルは&lt;a href=&#34;https://github.com/tokuhirom/Archer/blob/master/assets/kwalify/schema.yaml&#34;&gt;ここ&lt;/a&gt;とか&lt;a href=&#34;https://github.com/tokuhirom/Archer/blob/master/examples/config.yaml&#34;&gt;ここ&lt;/a&gt;とかよく見ておこうと思う。あとソースも。&lt;/p&gt;

&lt;p&gt;今回は以下のような感じ。&lt;/p&gt;

&lt;p&gt;```yml deploy.yml
global:
  work_dir: /path/to/work_dir
  dest_dir: /path/to/dest_dir
  assets_path: assets
  log:
    level: debug&lt;/p&gt;

&lt;p&gt;tasks:
  init:
    - module: Confirm
      name: confirm
      config:
        msg: &amp;lsquo;deploy ok? [y/n]&amp;rsquo;
  process:
    - module: Rsync
      name: rsync
      role: app
      config:
        user: app
        verbose: 1
        archive: 1
        compress: 1
        rsh: ssh
        update: 0
        delete: 1
        source: /path/to/source
        exclude:
          - .svn/
          - tmp/*
          - log/*
    - module: Exec::Remote
      name: restart
      role: app
      config:
        command: &amp;ldquo;-t &amp;lsquo;sudo kill -HUP &lt;code&gt;cat /tmp/starman.pid&lt;/code&gt;&amp;rsquo;&amp;rdquo;
projects:
  example:
    app:
      - app01
      - app02&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
tasks.process の

```yml
    - module: Exec::Remote
      name: restart
      role: app
      config:
        command: &amp;quot;-t &#39;sudo kill -HUP `cat /tmp/starman.pid`&#39;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、リモートからSSHログインしてHUPを送ることをしている。
実際には&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo -u app ssh app01 -t &#39;sudo kill -HUP `cat /tmp/starman.pid`&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;って感じに展開される。
当然app*に対しては公開鍵認証設定するなどしてパスワードなしでSSHログインできるようにしておくのと、killとcatはsudoで実行できるようにしておく必要がある。&lt;/p&gt;

&lt;p&gt;sshの&lt;code&gt;-t&lt;/code&gt;オプションっていうのは知らなかったんだけど、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-t      Force pseudo-tty allocation.  This can be used to execute arbitrary screen-based programs on a remote machine, which can be very
        useful, e.g. when implementing menu services.  Multiple -t options force tty allocation, even if ssh has no local tty.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というもの。これがないと&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo: sorry, you must have a tty to run sudo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と怒られるのを回避できる。&lt;/p&gt;

&lt;p&gt;これで&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;archer.pl --config=deploy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;って感じで実行すると、先ほどと同じようにapp*側のStarmanが再起動されるはず。&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;StarmanとArcherで、デプロイからのGraceful Restartを構成した。&lt;/p&gt;

&lt;p&gt;実運用する場合にはStarmanをdaemontoolsとかsupervisordとかで監視したりってのも出てくると思うけど、基本的には同じ話かと思う。
daemontoolsにはsvcってユーティリティでシグナルの送信ができるので、sudo killできる必要がなくなる。
supervisordはsupervisorctlに&lt;code&gt;restart&lt;/code&gt;ってコマンドがあるんだけど、これがHUPを送るものなのかは確認していない。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>