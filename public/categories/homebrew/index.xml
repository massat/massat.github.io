<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homebrew on massat log</title>
    <link>https://massat.github.io/categories/homebrew/index.xml</link>
    <description>Recent content in Homebrew on massat log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <atom:link href="https://massat.github.io/categories/homebrew/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>bootstrap-my-mac</title>
      <link>https://massat.github.io/2014/07/08/bootstrap-my-mac/</link>
      <pubDate>Tue, 08 Jul 2014 22:02:36 +0000</pubDate>
      
      <guid>https://massat.github.io/2014/07/08/bootstrap-my-mac/</guid>
      <description>&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p&gt;おやおや？ [pic] — &lt;a href=&#34;https://t.co/N0BbShnkAH&#34;&gt;https://t.co/N0BbShnkAH&lt;/a&gt;&lt;/p&gt;&amp;mdash; 平井雅人 (@massat) &lt;a href=&#34;https://twitter.com/massat/statuses/470715846495444992&#34;&gt;2014, 5月 25&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;というわけで Macbook Pro を新調して、新しい環境構築をすることとなった。&lt;/p&gt;

&lt;p&gt;旧MBPはたしかMac2代目?で、2010年から使っていて、はじめは &lt;code&gt;port&lt;/code&gt; とか使ってたように思うし、&lt;code&gt;MAMP&lt;/code&gt; とかもつかってたかもしれない。
そのうちに &lt;code&gt;Homebrew&lt;/code&gt; が現れて、へー美味しいの？なんて使い始めて、へー &lt;code&gt;rbenv&lt;/code&gt; ? なんていってrubyも突っ込んで。
そのうちに、あれPATHが通ってないとかgemが動かないとか。あーなんか整理できていないなーなんて思いながらも、
基本1つのプロダクトに集中して携わっていてworkしてるのでよしとしていた感があった。&lt;/p&gt;

&lt;p&gt;一方で、 &lt;code&gt;chef&lt;/code&gt; だったり &lt;code&gt;puppet&lt;/code&gt; だったり &lt;code&gt;serverspec&lt;/code&gt; だったり。
環境をコードで記述するっていうことが普通に行われるようになった今。
新しい愛機をセットアップするにあたっては、この環境をよりcleanでポータブルなものにしようと思ってしこしこやっているのでした。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/massat/bootstrap&#34;&gt;massat/bootstrap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最初は &lt;code&gt;Brewfile&lt;/code&gt; を書いてたんだけど、そのうち &lt;code&gt;Homebrew&lt;/code&gt; で賄いきれなくなって、
&lt;a href=&#34;http://www.ansible.com/home&#34;&gt;ansible&lt;/a&gt; でまとめてる。&lt;/p&gt;

&lt;p&gt;macを新しく買ってきて、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ xcode-select --install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で command line tools を入れて、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ruby -e &amp;quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で Homebrewを入れて&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew install ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;ansible&lt;/code&gt; をインストール。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ git clone git@github.com:massat/bootstrap.git
$ cd bootstrap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;play-book のレポジトリを clone して、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ansible-playbook -i inventory -K playbook.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で環境ができあがる、つもり。
なんだけど、もはや自分の環境では何度も実行してるので、cleanな環境に適用できるのか自信なし。&lt;/p&gt;

&lt;p&gt;2014/7/8 現在、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Homebrew&lt;/li&gt;
&lt;li&gt;mosh&lt;/li&gt;
&lt;li&gt;the_silver_searcher&lt;/li&gt;
&lt;li&gt;oh-my-zsh&lt;/li&gt;
&lt;li&gt;autojump&lt;/li&gt;
&lt;li&gt;peco&lt;/li&gt;
&lt;li&gt;ghq&lt;/li&gt;
&lt;li&gt;gh-open&lt;/li&gt;
&lt;li&gt;rbenv&lt;/li&gt;
&lt;li&gt;php&lt;/li&gt;
&lt;li&gt;go&lt;/li&gt;
&lt;li&gt;vagrant&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などなど。
捗るツールが入る、つもり。
自分の環境では動いてる。&lt;/p&gt;

&lt;p&gt;p-r 歓迎。&lt;/p&gt;

&lt;p&gt;(7/9追記)&lt;/p&gt;

&lt;p&gt;homebrew-cask で以下のも入れてる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;alfred&lt;/li&gt;
&lt;li&gt;coteditor&lt;/li&gt;
&lt;li&gt;evernote&lt;/li&gt;
&lt;li&gt;google-chrome&lt;/li&gt;
&lt;li&gt;google-japanese-ime&lt;/li&gt;
&lt;li&gt;hipchat&lt;/li&gt;
&lt;li&gt;hoster&lt;/li&gt;
&lt;li&gt;iterm2&lt;/li&gt;
&lt;li&gt;libreoffice&lt;/li&gt;
&lt;li&gt;mysqlworkbench&lt;/li&gt;
&lt;li&gt;skype&lt;/li&gt;
&lt;li&gt;slack&lt;/li&gt;
&lt;li&gt;sophos-anti-virus-home-edition&lt;/li&gt;
&lt;li&gt;sublime-text&lt;/li&gt;
&lt;li&gt;virtualbox&lt;/li&gt;
&lt;li&gt;yorufukurou&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Mountain Lion にPHP開発環境をつくった</title>
      <link>https://massat.github.io/2012/11/24/setup-php-on-mountain-lion/</link>
      <pubDate>Sat, 24 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://massat.github.io/2012/11/24/setup-php-on-mountain-lion/</guid>
      <description>&lt;p&gt;クリーンインストールしてからのPHP環境構築ログ。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;準備&#34;&gt;準備&lt;/h2&gt;

&lt;p&gt;ログインシェルをzshにしたりとかemacsいれたりとかいろいろやったけど、
PHP環境に関係ある話としては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.apple.com/downloads/index.action&#34;&gt;Command Line Tools for Xcode&lt;/a&gt; をインストール&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mxcl.github.com/homebrew/&#34;&gt;Homebrew&lt;/a&gt; をインストール&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;くらい。&lt;/p&gt;

&lt;h2 id=&#34;パッケージインストール&#34;&gt;パッケージインストール&lt;/h2&gt;

&lt;p&gt;レポジトリ追加して&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew tap homebrew/dupes
$ brew tap josegonzalez/php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;開発で使うあたりをつらつら追加&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew install make
$ brew install httpd mysql memcached mongodb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PHP&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew install php53 --with-mysql
$ brew install php53-memcache php53-mongo php53-redis
$ brew install phpsh
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;設定-起動&#34;&gt;設定&amp;amp;起動&lt;/h2&gt;

&lt;p&gt;phpの設定ファイルは &lt;code&gt;/usr/local/etc/php/&lt;/code&gt; あたり、
apacheの設定ファイルは &lt;code&gt;/usr/local/etc/apache2/&lt;/code&gt; あたりにあるのでVirtualHostをよしなに設定する。&lt;/p&gt;

&lt;p&gt;apacheは &lt;code&gt;/usr/local/sbin/apachectl&lt;/code&gt; あたり、
mysqlは &lt;code&gt;/usr/local/bin/mysql.server&lt;/code&gt; あたりで起動する。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>